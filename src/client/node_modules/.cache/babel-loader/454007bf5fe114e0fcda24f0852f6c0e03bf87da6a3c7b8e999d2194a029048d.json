{"ast":null,"code":"import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_RESET, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_RESET, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_LIST_RESET, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_RESET } from '../constants/userConstants';\nimport api from '../utils/api';\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const {\n      data\n    } = await api.post('/users/login', {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const {\n      data\n    } = await api.post('/users', {\n      name,\n      email,\n      password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await api.get(`/users/${id}`);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      data\n    } = await api.put('/users/profile', user);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST\n    });\n    const {\n      data\n    } = await api.get('/users');\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deleteUser = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST\n    });\n    await api.delete(`/users/${id}`);\n    dispatch({\n      type: USER_DELETE_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUser = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST\n    });\n    const {\n      data\n    } = await api.put(`/users/${user._id}`, user);\n    dispatch({\n      type: USER_UPDATE_SUCCESS\n    });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","api","login","email","password","dispatch","type","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","register","name","getUserDetails","id","getState","get","updateUserProfile","user","put","listUsers","deleteUser","delete","updateUser","_id"],"sources":["/Users/anilkhand/ecommerce-site/src/client/src/actions/userActions.js"],"sourcesContent":["import {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_DETAILS_RESET,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_RESET,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_RESET,\n} from '../constants/userConstants';\nimport api from '../utils/api';\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_LOGIN_REQUEST });\n\n    const { data } = await api.post('/users/login', { email, password });\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem('userInfo');\n  dispatch({ type: USER_LOGOUT });\n};\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_REGISTER_REQUEST });\n\n    const { data } = await api.post('/users', { name, email, password });\n\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_DETAILS_REQUEST });\n\n    const { data } = await api.get(`/users/${id}`);\n\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_UPDATE_PROFILE_REQUEST });\n\n    const { data } = await api.put('/users/profile', user);\n\n    dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data });\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_LIST_REQUEST });\n\n    const { data } = await api.get('/users');\n\n    dispatch({ type: USER_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_DELETE_REQUEST });\n\n    await api.delete(`/users/${id}`);\n\n    dispatch({ type: USER_DELETE_SUCCESS });\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_UPDATE_REQUEST });\n\n    const { data } = await api.put(`/users/${user._id}`, user);\n\n    dispatch({ type: USER_UPDATE_SUCCESS });\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}