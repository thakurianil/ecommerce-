{"ast":null,"code":"import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL } from '../constants/userConstants';\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await fetch('/api/users/login', {\n      method: 'POST',\n      headers: config.headers,\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(res => res.json());\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await fetch('/api/users', {\n      method: 'POST',\n      headers: config.headers,\n      body: JSON.stringify({\n        name,\n        email,\n        password\n      })\n    }).then(res => res.json());\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await fetch(`/api/users/${id}`, {\n      headers: config.headers\n    }).then(res => res.json());\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await fetch('/api/users/profile', {\n      method: 'PUT',\n      headers: config.headers,\n      body: JSON.stringify(user)\n    }).then(res => res.json());\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","login","email","password","dispatch","type","config","headers","data","fetch","method","body","JSON","stringify","then","res","json","payload","localStorage","setItem","error","response","message","logout","removeItem","register","name","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","updateUserProfile","user"],"sources":["/Users/anilkhand/ecommerce-site/src/client/src/actions/userActions.js"],"sourcesContent":["import {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n} from '../constants/userConstants';\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_LOGIN_REQUEST });\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const { data } = await fetch('/api/users/login', {\n      method: 'POST',\n      headers: config.headers,\n      body: JSON.stringify({ email, password }),\n    }).then((res) => res.json());\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem('userInfo');\n  dispatch({ type: USER_LOGOUT });\n};\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_REGISTER_REQUEST });\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const { data } = await fetch('/api/users', {\n      method: 'POST',\n      headers: config.headers,\n      body: JSON.stringify({ name, email, password }),\n    }).then((res) => res.json());\n\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_DETAILS_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await fetch(`/api/users/${id}`, {\n      headers: config.headers,\n    }).then((res) => res.json());\n\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_UPDATE_PROFILE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await fetch('/api/users/profile', {\n      method: 'PUT',\n      headers: config.headers,\n      body: JSON.stringify(user),\n    }).then((res) => res.json());\n\n    dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data });\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}